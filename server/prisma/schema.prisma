generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model commission_allocations {
  id                         Int                      @id @default(autoincrement())
  company_id                 Int
  commission_payment_item_id Int
  sales_order_item_id        Int
  allocated_amount           Decimal                  @db.Decimal(12, 2)
  allocation_date            DateTime?                @default(dbgenerated("CURRENT_DATE")) @db.Date
  notes                      String?
  created_at                 DateTime?                @default(now()) @db.Timestamp(6)
  updated_at                 DateTime?                @default(now()) @db.Timestamp(6)
  commission_payment_items   commission_payment_items @relation(fields: [commission_payment_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  companies                  companies                @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sales_order_items          sales_order_items        @relation(fields: [sales_order_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([company_id], map: "idx_commission_allocations_company_id")
  @@index([sales_order_item_id], map: "idx_commission_allocations_order_item_id")
  @@index([commission_payment_item_id], map: "idx_commission_allocations_payment_item_id")
}


/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model commission_payment_items {
  id                     Int                      @id @default(autoincrement())
  company_id             Int
  commission_payment_id  Int
  amount                 Decimal                  @db.Decimal(12, 2)
  description            String?
  notes                  String?
  created_at             DateTime?                @default(now()) @db.Timestamp(6)
  updated_at             DateTime?                @default(now()) @db.Timestamp(6)
  commission_allocations commission_allocations[]
  companies              companies                @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  commission_payments    commission_payments      @relation(fields: [commission_payment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([company_id], map: "idx_commission_payment_items_company_id")
  @@index([commission_payment_id], map: "idx_commission_payment_items_payment_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model commission_payments {
  id                             Int                              @id @default(autoincrement())
  company_id                     Int
  supplier_id                    Int
  payment_date                   DateTime                         @db.Date
  payment_amount                 Decimal                          @db.Decimal(12, 2)
  payment_reference              String?                          @db.VarChar(100)
  notes                          String?
  status                         String?                          @default("received") @db.VarChar(50)
  created_at                     DateTime?                        @default(now()) @db.Timestamp(6)
  updated_at                     DateTime?                        @default(now()) @db.Timestamp(6)
  commission_payment_items       commission_payment_items[]
  companies                      companies                        @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  suppliers                      suppliers                        @relation(fields: [supplier_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([company_id], map: "idx_commission_payments_company_id")
  @@index([supplier_id], map: "idx_commission_payments_supplier_id")
}

model companies {
  id                             Int                              @id @default(autoincrement())
  name                           String                           @db.VarChar(255)
  slug                           String                           @unique @db.VarChar(100)
  description                    String?
  created_at                     DateTime?                        @default(now()) @db.Timestamp(6)
  updated_at                     DateTime?                        @default(now()) @db.Timestamp(6)
  commission_allocations         commission_allocations[]
  commission_payment_items       commission_payment_items[]
  commission_payments            commission_payments[]
  customers                      customers[]
  parts                          parts[]
  sales_order_items              sales_order_items[]
  sales_orders                   sales_orders[]
  suppliers                      suppliers[]
}

model customers {
  id           Int            @id @default(autoincrement())
  company_id   Int
  name         String         @db.VarChar(255)
  email        String?        @db.VarChar(255)
  phone        String?        @db.VarChar(50)
  address      String?
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  updated_at   DateTime?      @default(now()) @db.Timestamp(6)
  companies    companies      @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sales_orders sales_orders[]

  @@index([company_id], map: "idx_customers_company_id")
}

model parts {
  id                Int                 @id @default(autoincrement())
  company_id        Int
  supplier_id       Int
  sku               String              @db.VarChar(50)
  name              String              @db.VarChar(255)
  description       String?
  price             Decimal?            @db.Decimal(10, 2)
  created_at        DateTime?           @default(now()) @db.Timestamp(6)
  updated_at        DateTime?           @default(now()) @db.Timestamp(6)
  companies         companies           @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  suppliers         suppliers           @relation(fields: [supplier_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sales_order_items sales_order_items[]

  @@unique([company_id, sku])
  @@index([company_id], map: "idx_parts_company_id")
  @@index([company_id, sku], map: "idx_parts_sku")
  @@index([supplier_id], map: "idx_parts_supplier_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model sales_order_items {
  id                     Int                      @id @default(autoincrement())
  company_id             Int
  sales_order_id         Int
  part_id                Int
  supplier_id            Int
  quantity               Int
  unit_price             Decimal                  @db.Decimal(10, 2)
  line_total             Decimal?                 @db.Decimal(12, 2)
  created_at             DateTime?                @default(now()) @db.Timestamp(6)
  updated_at             DateTime?                @default(now()) @db.Timestamp(6)
  commission_rate        Decimal?                 @default(0.0000) @db.Decimal(5, 4)
  commission_percentage  Decimal?                 @default(0.00) @db.Decimal(5, 2)
  commission_amount      Decimal?                 @db.Decimal(12, 2)
  commission_allocations commission_allocations[]
  companies              companies                @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  parts                  parts                    @relation(fields: [part_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sales_orders           sales_orders             @relation(fields: [sales_order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  suppliers              suppliers                @relation(fields: [supplier_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([company_id], map: "idx_sales_order_items_company_id")
  @@index([sales_order_id], map: "idx_sales_order_items_order_id")
  @@index([part_id], map: "idx_sales_order_items_part_id")
  @@index([supplier_id], map: "idx_sales_order_items_supplier_id")
}

model sales_orders {
  id                             Int                              @id @default(autoincrement())
  company_id                     Int
  customer_id                    Int
  po_number                      String                           @db.VarChar(100)
  order_date                     DateTime                         @default(dbgenerated("CURRENT_DATE")) @db.Date
  status                         String                           @default("pending") @db.VarChar(50)
  total_amount                   Decimal?                         @default(0.00) @db.Decimal(12, 2)
  notes                          String?
  created_at                     DateTime?                        @default(now()) @db.Timestamp(6)
  updated_at                     DateTime?                        @default(now()) @db.Timestamp(6)
  total_commission               Decimal?                         @default(0.00) @db.Decimal(12, 2)
  sales_order_items              sales_order_items[]
  companies                      companies                        @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  customers                      customers                        @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([company_id, customer_id, po_number])
  @@index([company_id], map: "idx_sales_orders_company_id")
  @@index([customer_id], map: "idx_sales_orders_customer_id")
  @@index([company_id, customer_id, po_number], map: "idx_sales_orders_po_number")
}

model suppliers {
  id                  Int                   @id @default(autoincrement())
  company_id          Int
  name                String                @db.VarChar(255)
  contact_person      String?               @db.VarChar(255)
  email               String?               @db.VarChar(255)
  phone               String?               @db.VarChar(50)
  address             String?
  created_at          DateTime?             @default(now()) @db.Timestamp(6)
  updated_at          DateTime?             @default(now()) @db.Timestamp(6)
  commission_payments commission_payments[]
  parts               parts[]
  sales_order_items   sales_order_items[]
  companies           companies             @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([company_id], map: "idx_suppliers_company_id")
}
